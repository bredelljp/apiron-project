{
  "version": 3,
  "sources": ["../src/index.js"],
  "sourceRoot": "dist",
  "sourcesContent": ["// Define the main function to handle incoming requests\nasync function handleRequest(request) {\n  if (request.method === 'POST' && new URL(request.url).pathname === '/website_kpis') {\n    // Parse the JSON payload from the request\n    const data = await request.json();\n    const { name, url } = data;\n    if (!name || !url) {\n      return new Response('Name and URL are required', { status: 400 });\n    }\n\n    // Return a response with the provided name and URL\n    const responsePayload = {\n      name,\n      url,\n      timestamp: new Date().toISOString(),\n    };\n\n    return new Response(JSON.stringify(responsePayload), {\n      headers: { 'Content-Type': 'application/json' },\n      status: 200,\n    });\n  } else if (request.method === 'GET') {\n    // Handle GET requests\n    return new Response('Hello World!', { status: 200 });\n  } else {\n    // Return \"Not Found\" for other request methods and paths\n    return new Response('Not Found', { status: 404 });\n  }\n}\n\n// Attach the event listener to handle incoming requests\naddEventListener('fetch', (event) => {\n  event.respondWith(handleRequest(event.request));\n});\n"],
  "mappings": ";;AACA,iBAAe,cAAc,SAAS;AACpC,QAAI,QAAQ,WAAW,UAAU,IAAI,IAAI,QAAQ,GAAG,EAAE,aAAa,iBAAiB;AAElF,YAAM,OAAO,MAAM,QAAQ,KAAK;AAChC,YAAM,EAAE,MAAM,IAAI,IAAI;AACtB,UAAI,CAAC,QAAQ,CAAC,KAAK;AACjB,eAAO,IAAI,SAAS,6BAA6B,EAAE,QAAQ,IAAI,CAAC;AAAA,MAClE;AAGA,YAAM,kBAAkB;AAAA,QACtB;AAAA,QACA;AAAA,QACA,WAAW,IAAI,KAAK,EAAE,YAAY;AAAA,MACpC;AAEA,aAAO,IAAI,SAAS,KAAK,UAAU,eAAe,GAAG;AAAA,QACnD,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,QAC9C,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,WAAW,QAAQ,WAAW,OAAO;AAEnC,aAAO,IAAI,SAAS,gBAAgB,EAAE,QAAQ,IAAI,CAAC;AAAA,IACrD,OAAO;AAEL,aAAO,IAAI,SAAS,aAAa,EAAE,QAAQ,IAAI,CAAC;AAAA,IAClD;AAAA,EACF;AAGA,mBAAiB,SAAS,CAAC,UAAU;AACnC,UAAM,YAAY,cAAc,MAAM,OAAO,CAAC;AAAA,EAChD,CAAC;",
  "names": []
}
